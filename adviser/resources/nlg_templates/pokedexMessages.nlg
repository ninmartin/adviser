# ---------------NEW RULES - POKEDEX MESSAGES-------------------------

template welcomemsg(): "Welcome to the Pokedex chat bot. Which Pokemon do you want to learn about?"
template welcomemsg(help): "Sorry, I cannot understand you. Please tell me again what you are looking for."
template welcomemsg(more) : "Can I help you with anything else?"
template bad() : "Sorry I am a bit confused; please tell me again what you are looking for."
template closingmsg() : "Thank you, goodbye."
template catch(caught, name): "{either_or(caught, "Gotcha! ", "")}{name} {either_or(caught, "was caught!", "got away!")}"
template release(): "The pokemon was released."
template inform_number(num_caught): "There were {num_caught} Pokemon caught!" 

# System Requests

template request(male): "Can the Pokemon be male?"
template request(female): "Can the Pokemon be female?"
template request(category): "Which category should the pokemon have?"
template request(abilities): "What are the abilities of the pokemon?"
template request(types): "What are the types of the pokemon?"
template request(weaknesses): "What are the weaknesses of the pokemon?"

# Rules for System Inform

function info(slot, value, name)
	if slot = "weight": "weighs {value} kilograms"
	if slot = "height": "is {value} meters tall"
	if slot = "id": "has the id {value}"
	if slot = "name": "is called {value}"
	if slot = "male": "can {either_or(value, "", "not ")}be male"
	if slot = "female": "can {either_or(value, "", "not ")}be female"
	if slot = "category": "has the category {value}"
	if slot = "abilities": "has the ability {value}"
	if slot = "types": "has the type {value}"
	if slot = "weaknesses": "has the weaknesses {value}"
	if slot = "caught": "was {either_or(value, "", "not ")}caught"

function either_or(boolean, if_true, if_false)
	if boolean = "true": "{if_true}"
	if boolean = "false": "{if_false}"

function catching(boolean, if_true, if_false)
	if boolean = "true": "Gotcha! {if_false} was caught!"
	if boolean = "false": "{if_false} got away!"


# catch stuff

template catch(name)
	"Gotcha! {name} was caught!"

	special_case name = "none"
		"I’m sorry, I could not find this Pokemon."

# -------------------------Only Name Slot-----------------------------------#

template inform_byname(name)
	"There is a Pokemon called {name}. What do you want to know about them?"

	special_case name = "none"
		"I’m sorry, I could not find this Pokemon."


template inform_alternatives(name)
	"There is another Pokemon called {name}. What do you want to know about them?"

	special_case name = "none"
		"I'm sorry, I couldn't find another Pokemon."


#------------------------ Name Slot + Slots----------------------------------#

template inform_byname(name, *slots)
	"The Pokemon called {name} {for_entry(slots, "info", ", it ", " and it ", name)}."
	
	special_case name = "none"
		"There is no such Pokemon that {for_entry(slots, "info", ", ", " and ", name)}."

template inform_alternatives(name, *slots)
	"The Pokemon {name} also {for_entry(slots, "info", ", it ", " and it ", name)}."
	
	special_case name = "none"
		"There is no other Pokemon which also {for_entry(slots, "info", ", ", " and ", name)}."


# ----------------------------System Confirm----------------------------------#

template confirm()
	"Please tell me more about the Pokemon you are looking for."
template confirm(name, *slots)
	if name = "none"
		"Let me confirm, you are looking for a Pokemon that {for_entry(slots, "info", ", ", " and ", name)}, right?"
template confirm(*slots)
	"Let me confirm, you are looking for a Pokemon that {for_entry(slots, "info", ", ", " and ", "none")}, right?"


# ---------------------------System RequestMore------------------------------#

template reqmore()
	"Can I help you with anything else?"

template reqmore(category)
	if category = "dontcare"
		"Would you like me to look for a Pokemon category?"

# ---------------------------System Select----------------------------------#

template select(*slot)
	"Sorry, would you like to have a Pokemon {for_entry(slot, "info_or_dontcare_list", "", "")}?"

function info_or_dontcare_list(slot, value_list)
	"{for(value_list, "info_or_dontcare", ", ", " or ", slot)}"

function info_or_dontcare(value, slot)
	"which {info(slot, value, "none")}"
	special_case value = "dontcare": "you don't care"