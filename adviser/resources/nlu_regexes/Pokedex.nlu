# general rules

# user informable slots are name, department and position

rule inform(id)
    "I want {id}"
    "I want the pokemon with number {id}"
    "The pokemon should have id {id}"

rule inform(name)
    "I want {synonyms("name", name)}"
    "I want the pokemon with the name {synonyms("name", name)}"
    "The pokemon is called {synonyms("name", name)}"

rule inform(height)
    "(The pokemon|It) should be {height} tall"
    "(The pokemon|It) should be {height} meter(s|) tall"
    "I want a pokemon which is {height} meter(s|) tall"

rule inform(weight)
    "(The pokemon|It) should weight {weight} kilogram(s|)"
    "(The pokemon|It) should weight {weight}"
    "I want a pokemon which weights {weight} kilogram(s|)"

rule inform(male)
    if male = "true":
        "(The pokemon|It) should be male"
        "I want a pokemon which can be male"
    if male = "false":
        "(The pokemon|It) should not be male"
        "I want a pokemon which can not be male"

rule inform(female)
    if female = "true":
        "(The pokemon|It) should be female"
        "I want a pokemon which can be female"
    if female = "false":
        "(The pokemon|It) should not be female"
        "I want a pokemon which can not be female"

rule inform(category)
    "{synonyms("category", category)}"
    "(The pokemon|It) should be of category {category}"
    "(The pokemon|It) should have category {category}"
    "I want a pokemon with category {category}"

rule inform(abilities)
    "{synonyms("abilities", abilities)}"
    "(The pokemon|It) has the abilit(y|ies) {synonyms("abilities", abilities)}"
    "(The pokemon|It) should have the abilities {synonyms("abilities", abilities)}"
    "I want a pokemon with the abilit(y|ies) {synonyms("abilities", abilities)}"

rule inform(types)
    "{synonyms("types", types)}"
    "(The pokemon|It) is of type {synonyms("types", types)}"
    "I want a pokemon of type(s|) {synonyms("types", types)}"
    "I want a pokemon which has type {synonyms("types", types)} and {synonyms("types", types)}"

rule inform(weaknesses)
    "{synonyms("weaknesses", weaknesses)}"
    "(The pokemon|It) has the weakness(es|) {synonyms("weaknesses", weaknesses)}"
    "(The pokemon|It) should have the weaknesses {synonyms("weaknesses", weaknesses)}"
    "I want a pokemon with weakness(es|) {synonyms("weaknesses", weaknesses)}"
    "(The pokemon|it) is weak to {synonyms("weaknesses", weaknesses)}"

rule inform(caught)
    if caught = "true"
        "I want a pokemon which I (already|) caught"
        "The pokemon is caught"
    if caught = "false"
        "I want a pokemon which I did (already|) not catch"
        "The pokemon is not caught"

# All slots are requestable

rule request(id)
    "What is the id of the pokemon?"

rule request(name)
    "What is the name of the pokemon?"

rule request(height)
    "What is the height of the pokemon?"
    "How tall is (the pokemon|it)?"

rule request(weight)
    "What is the weight of the pokemon?"
    "How heavy is (the pokemon|it)?"

rule request(male)
    "Can (the pokemon|it) be male?"

rule request(female)
    "Can (the pokemon|it) be female?"

rule request(category)
    "What is the category of the pokemon?"

rule request(abilities)
    "What (is|are) the abilit(y|ies) of the pokemon?"

rule request(types)
    "What (is|are) the type(s|) of the pokemon?"

rule request(weaknesses)
    "What (is|are) the weakness(es|) of the pokemon?"

rule request(caught)
    "Was (the pokemon|it) (already|) caught?"


# synonyms

function synonyms(slot, value)
    "{value}"

    add_if slot = "name"
        if value = "Nidoran♀"
            "Nidoran"
        if value = "Nidoran♂"
            "Nidoran"
        if value = "Farfetch’d"
            "Farfetch"
            "Farfetchd"

function slot_synonyms(slot)
    "{IMPOSSIBLEREGEX()}"

    if slot = "id"
        "id"
        "ids"
    if slot = "name"
        "name"
        "names"
    if slot = "height"
        "height"
        "heights"
    if slot = "weight"
        "weight"
        "weights"
    if slot = "male"
        "male"
        "males"
    if slot = "female"
        "female"
        "females"
    if slot = "category"
        "category"
        "categories"
    if slot = "abilities"
        "abilities"
        "ability"
    if slot = "types"
        "types"
        "type"
    if slot = "weaknesses"
        "weakness"
        "weaknesses"


# constants
